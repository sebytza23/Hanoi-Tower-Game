#include <iostream>
#include <string>
#include <iomanip>
#include <cstdlib>

using namespace std;

// ------------------------------------------------ Structura joc ---------------------------------------------------

bool jucator = true;

struct nod
{
	string info;
	char Nume[20];
	int moves;
	int tag;
	bool tagjucator;
	nod* pred;
};

struct coada
{
	string mutare;
	coada* pred;
};

typedef struct coada Coada;

typedef struct nod Stiva;

nod Jucator1, Jucator2;

// ------------------------------------------------ Structura joc ---------------------------------------------------

// -------------------------------------------------- Aditionale ----------------------------------------------------

void PRINT_ERROR(int);

Coada* Init(Coada* cd)
{
	cd->pred = NULL;
	return cd;
}

Coada* Top(Coada* cd)
{
	return cd;
}

Stiva* INIT(Stiva* st)
{
	st->pred = NULL;
	st->tag = NULL;
	return st;
}

Stiva* TOP(Stiva* st)
{
	return st;
}

Stiva* Cauta(Stiva* st, bool tag, bool& found, int tag2 = 1)
{
	if (tag2 != 1) {
		if (st->tag == NULL) {
			found = false;
		}
		else {
			while (st->tag) {
				if (st->tagjucator != tag)
				{
					found = true;
				}
				st = st->pred;
			}
		}
	}
	while (st->pred)
	{
		if (st->tagjucator != tag)
		{
			st = st->pred;
			found = true;
		}
		else
			break;
	}
	return st;
}

// -------------------------------------------------- Aditionale ----------------------------------------------------

// ------------------------------------------ Lungime stiva + Suma stiva --------------------------------------------

int SUM(Stiva* st, bool tag)
{
	int suma = 0;
	while (st->pred)
	{
		if (st->tagjucator == tag)
		{
			suma += st->tag;
		}
		st = st->pred;
	}
	return suma;
}

int Another_SUM(int n)
{
	int suma = n;
	if (n == 1)
		return 1;
	else
		return suma + Another_SUM(n - 1);
}

int LENGTH(Stiva* st, bool tag)
{
	int k = 0;
	while (st->pred)
	{
		k++;
		st = st->pred;
	}
	return k;
}

// ------------------------------------------------ Lungime stiva ---------------------------------------------------

// ------------------------------------------------- Golire stiva ---------------------------------------------------

void EMPTY(Stiva*& st)
{
	if (st->pred)
	{
		while (st->pred)
		{
			Stiva* aux;
			aux = st;
			st = st->pred;
			delete aux;
		}
	}
	else
		PRINT_ERROR(1);
}

// ------------------------------------------------- Golire stiva ---------------------------------------------------

// ---------------------------------------------- Adaugare in stiva -------------------------------------------------

Stiva* PUSH(Stiva* vf, int inf, bool jucator)
{
	Stiva* aux;
	aux = new (Stiva);
	aux = INIT(aux);
	string c;
	for (int i = 1; i <= inf; i++)
	{
		c = c + "*" + " ";
	}
	aux->tagjucator = jucator;
	aux->info = c;
	aux->tag = inf;
	if (vf)
	{
		aux->pred = vf;
		vf = aux;
	}
	else
		vf = aux;
	return vf;
}

Coada* Push(Coada* cd, string info, bool juc) {
	Coada* aux;
	aux = new (Coada);
	aux = Init(aux);
	if (juc)
		aux->mutare = info+Jucator1.Nume;
	else
		aux->mutare = info + Jucator2.Nume;
	if (cd)
	{
		aux->pred = cd;
		cd = aux;
	}
	else
		cd = aux;
	return cd;
}

// ---------------------------------------------- Adaugare in stiva -------------------------------------------------

// ---------------------------------------------- Extragere din stiva -----------------------------------------------

Stiva* POP(Stiva*& st1, Stiva* st2)
{
	Stiva* aux;
	aux = new (Stiva);
	aux = INIT(aux);
	aux->info = st1->info;
	aux->tag = st1->tag;
	aux->tagjucator = jucator;
	if (st2)
	{
		aux->pred = st2;
		st2 = aux;
	}
	else
		st2 = aux;
	st1 = st1->pred;
	return st2;
}

// ---------------------------------------------- Extragere din stiva -----------------------------------------------

// ----------------------------------------------------- Afisare ----------------------------------------------------

void Print(Coada* cd) {
	while (cd->pred) {
		cout << cd->mutare << endl;
		cd = cd->pred;
	}
}

void PRINT(Stiva* st1, Stiva* st2, Stiva* st3, Stiva* st4, Stiva* st5, int n)
{
	cout << endl;
	n++;
	while (st1->pred)
	{
		cout << st1->info << endl;
		st1 = st1->pred;
	}
	for (int i = 1; i <= n * 2; i++)
	{
		cout << "=";
	}
	cout << endl
		<< setw(n + strlen("Turnul 1") / 2) << "Turnul 1" << endl
		<< endl;
	while (st2->pred)
	{
		cout << st2->info << endl;
		st2 = st2->pred;
	}
	for (int i = 1; i <= n * 2; i++)
	{
		cout << "=";
	}
	cout << endl
		<< setw(n + strlen("Turnul 2") / 2) << "Turnul 2" << endl
		<< endl;
	while (st3->pred)
	{
		cout << st3->info << endl;
		st3 = st3->pred;
	}
	for (int i = 1; i <= n * 2; i++)
	{
		cout << "=";
	}
	cout << endl
		<< setw(n + strlen("Turnul 3") / 2) << "Turnul 3" << endl
		<< endl;
	while (st4->pred)
	{
		cout << st4->info << endl;
		st4 = st4->pred;
	}
	for (int i = 1; i <= n * 2; i++)
	{
		cout << "=";
	}
	cout << endl
		<< setw(n + strlen("Turnul 4") / 2) << "Turnul 4" << endl
		<< endl;
	while (st5->pred)
	{
		cout << st5->info << endl;
		st5 = st5->pred;
	}
	for (int i = 1; i <= n * 2; i++)
	{
		cout << "=";
	}
	cout << endl
		<< setw(n + strlen("Turnul 5") / 2) << "Turnul 5" << endl
		<< endl;
}

// ---------------------------------------------- Afisare -----------------------------------------------------------

// ------------------------------------------ Alegeri inceput -------------------------------------------------------

void Choice(Stiva*& st1, Stiva*& st2)
{
	int choice;
	cout << endl;
eroare:
	system("cls");
	cout << " 1) Porneste jocul.\n";
	cout << " 2) Cum se joaca?.\n";
	cout << " 3) Iesire.\n";
	cout << "\tAlege>: ";
	cin >> choice;
	if (cin.fail() || (choice > 3 || choice < 1))
	{
		cin.clear();
		cin.ignore();
		PRINT_ERROR(4);
		system("pause");
		goto eroare;
	}
	switch (choice)
	{
	case 1:
		system("cls");
		cout << "\tJocul a pornit!\n\tAlegeti un nume pentru Jucatorul 1:";
		cin >> Jucator1.Nume;
		cout << "\tAlegeti un nume pentru Jucatorul 2:";
		cin >> Jucator2.Nume;
		Jucator1.tagjucator = true;
		Jucator2.tagjucator = false;
		break;
	case 2:
		system("cls");
		cout << "Jocul se bazeaza pe o tabla cu 3 bete,unde se pune un anumit numar de discuri pe batul 1.\nDiscurile trebuie sa fie : Primul sa fie cel mai mic, Iar ultimul sa fie cel mai mare.\n";
		system("pause");
		goto eroare;
		break;
	case 3:
		cout << "Iesire Joc.\n";
		system("pause");
		exit(0);
	}
}

// ------------------------------------------ Alegeri inceput -------------------------------------------------------

// --------------------------------------- Alegere numar discuri ----------------------------------------------------

void discuri(int& n)
{
eroare:
	cout << "Va rugam introduceti numarul de discuri(minim 3):";
	cin >> n;
	if (cin.fail() || (n < 3))
	{
		cin.clear();
		cin.ignore();
		PRINT_ERROR(4);
		system("pause");
		goto eroare;
	}
}

// ------------------------------------------ Alegere numar discuri -------------------------------------------------

// -------------------------------------------- Partea principala ---------------------------------------------------

int main()
{
	int n;
	bool fndst1, fndst2, fndst3, fndst4, fndst5;
start:
	int choice;
	Stiva* st1;
	Stiva* st2;
	Stiva* st3;
	Stiva* st4;
	Stiva* st5;
	Coada* mutari;
	mutari = new (Coada);
	mutari = Init(mutari);
	st1 = new (Stiva);
	st1 = INIT(st1);
	st2 = new (Stiva);
	st2 = INIT(st2);
	st3 = new (Stiva);
	st3 = INIT(st3);
	st4 = new (Stiva);
	st4 = INIT(st4);
	st5 = new (Stiva);
	st5 = INIT(st5);
	Choice(st1, st5);
	discuri(n);
	for (int i = 1; i <= n; i++)
		st1 = PUSH(st1, n - i + 1, Jucator1.tagjucator);
	for (int i = 1; i <= n; i++)
		st5 = PUSH(st5, n - i + 1, Jucator2.tagjucator);
	system("cls");
	int suma = Another_SUM(n);
	while ((SUM(st1, false) != suma) && (SUM(st2, false) != suma) && (SUM(st4, true) != suma) && (SUM(st5, true) != suma))
	{
		fndst1 = fndst2 = fndst3 = fndst4 = fndst5 = false;
		Cauta(st1, !jucator, fndst1, 2);
		Cauta(st2, !jucator, fndst2, 2);
		Cauta(st3, !jucator, fndst3, 2);
		Cauta(st4, !jucator, fndst4, 2);
		Cauta(st5, !jucator, fndst5, 2);
		bool justavalue;
		system("cls");
		PRINT(st1, st2, st3, st4, st5, n);
		cout << Top(mutari)->mutare << endl;
		if (jucator)
		{
			if (fndst1 && fndst2 && fndst3 && fndst4 && fndst5) {
				cout << "Mergi in sebi 1 - 2 - 3 - 4 - 5";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst3 && fndst4) {
				cout << "Mergi in sebi 1 - 2 - 3 - 4";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst3 && fndst5) {
				cout << "Mergi in sebi 1 - 2 - 3 - 5";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst4 && fndst5) {
				cout << "Mergi in sebi 1 - 2 - 4 - 5";
				system("pause");
			}
			else if (fndst1 && fndst3 && fndst4 && fndst5) {
				cout << "Mergi in sebi 1 - 3 - 4 - 5";
				system("pause");
			}
			else if (fndst2 && fndst3 && fndst4 && fndst5) {
				cout << "Mergi in sebi 2 - 3 - 4 - 5";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst3) {
				if (TOP(st1)->tag < TOP(st5)->tag) {
					if ((TOP(st1)->tagjucator != jucator) && TOP(st4)->tag == NULL && TOP(st5)->tagjucator != jucator && TOP(st2)->tag < TOP(st3)->tag) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 3 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Jocul a plasat discul pe singura pozitie disponibila: Turnul 4\n";
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							st4 = POP(aux, st4);
							mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator);
						}
						else if(choice == 2){
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st2, st3);  mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st2, st4);  mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 2: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
					}
				}
			}
			else if (fndst1 && fndst2 && fndst4) {
				cout << "Mergi in sebi 1 - 2 - 4";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst5) {
				cout << "Mergi in sebi 1 - 2 - 5";
				system("pause");
			}
			else if (fndst1 && fndst3 && fndst4) {
				cout << "Mergi in sebi 1 - 3 - 4";
				system("pause");
			}
			else if (fndst1 && fndst3 && fndst5) {
				cout << "Mergi in sebi 2 - 3 - 5";
				system("pause");
			}
			else if (fndst1 && fndst4 && fndst5) {
				if (TOP(st1)->tag <= TOP(st5)->tag) {
					if ((TOP(st1)->tagjucator != jucator) && TOP(st3)->tag == NULL && TOP(st5)->tagjucator == jucator && TOP(st2)->tag == TOP(st4)->tag) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 3 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Jocul a plasat discul pe singura pozitie disponibila: Turnul 3\n";
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							st3 = POP(aux, st3);
							mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator);
						}
						else if (choice == 2) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st4, st3);  mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 4: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
				}
			}
			else if (fndst2 && fndst3 && fndst4) {
				cout << "Mergi in sebi 2 - 3 - 4";
				system("pause");
			}
			else if (fndst2 && fndst3 && fndst5) {
				cout << "Mergi in sebi 2 - 3 - 5";
				system("pause");
			}
			else if (fndst2 && fndst4 && fndst5) {
				cout << "Mergi in sebi 2 - 4 - 5";
				system("pause");
			}
			else if (fndst3 && fndst4 && fndst5) {
			
				cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
				cout << "\t1) Turnul 3\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
				while (cin.fail() || (choice > 3 || choice < 1)) {
					PRINT_ERROR(5);
					cout << "\t1) Turnul 3\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
				}
				if (choice == 3) {
					cout << "Jocul a plasat discul pe singura pozitie disponibila: Turnul 1\n";
					st1 = POP(st5, st1);
				}
				else if (choice == 2) {
					cout << "Valori disponibile de plasat:\n";
					cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 3 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					switch (choice) {
					case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
					case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
					case 3: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
					}
				}
				else if (choice == 1) {
					cout << "Valori disponibile de plasat:\n";
					cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 4 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
					}
					Stiva* aux = Cauta(st3, jucator, justavalue);
					st3->pred = aux->pred;
					switch (choice) {
					case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
					case 2: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
					case 3: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 3 de catre ", jucator); break;
					case 4: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
					}
				}
			
			}
			else if (fndst1 && fndst2) {
				if (TOP(st1)->tag >= TOP(st5)->tag) {
					if ((TOP(st2)->tag != jucator) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 3\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 3\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 2: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 3: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st2, jucator, justavalue);
							st2->pred = aux->pred;
							switch (choice) {
							case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st2)->tag == jucator) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 3\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 3\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 2: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 3: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st2)->tag != NULL) && (TOP(st3)->tag != NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 2: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st2)->tag != NULL) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag != NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 2: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
							}
						}
					}
				}
				else {
					if ((TOP(st2)->tagjucator == jucator) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 3\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 3\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							switch (choice) {
							case 1: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 2: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 3: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
							}
						}
					}
				}
			}
			else if (fndst1 && fndst3) {
				if (TOP(st1)->tag >= TOP(st5)->tag) {
					if ((TOP(st3)->tag < TOP(st1)->tag) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 3\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 3: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st3, jucator, justavalue);
							st3->pred = aux->pred;
							switch (choice) {
							case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st2)->tag != NULL) && (TOP(st3)->tag != NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 2: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st2)->tag == NULL) && (TOP(st3)->tag != NULL) && (TOP(st4)->tag != NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
					}
				}
				else {
					if ((TOP(st3)->tagjucator == jucator) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							switch (choice) {
							case 1: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 3: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st3)->tagjucator != jucator) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 4\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							switch (choice) {
							case 1: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 3: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
					}
				}
			}
			else if (fndst1 && fndst4) {
				if (TOP(st1)->tag >= TOP(st5)->tag) {
					if ((TOP(st4)->tag < TOP(st1)->tag) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st4, jucator, justavalue);
							st4->pred = aux->pred;
							switch (choice) {
							case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							case 4: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st4)->tag != NULL) && (TOP(st3)->tag != NULL) && (TOP(st2)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st4, st3);  mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st2)->tag != NULL) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag != NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 2: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
							}
						}
					}
				}
				else {
					if ((TOP(st4)->tagjucator == jucator) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL) && (TOP(st1)->tagjucator != jucator)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							switch (choice) {
							case 1: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
							}
						}
					}
				}
			}
			else if ((fndst1 && fndst5)) {
				if (TOP(st1)->tag >= TOP(st5)->tag) {
					if ((TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							switch (choice) {
							case 1: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 4: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st2)->tagjucator != jucator) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							switch (choice) {
							case 1: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 2: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 4: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st3)->tagjucator != jucator) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 4: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st4)->tagjucator != jucator) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL)) {
						cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 4: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
				}
			}
			else if (fndst2 && fndst3) {
				cout << "Mergi in sebi 2 - 3";
				system("pause");
			}
			else if (fndst2 && fndst4) {
				cout << "Mergi in sebi 2 - 4";
				system("pause");
			}
			else if (fndst2 && fndst5) {
				cout << "Mergi in sebi 2 - 5";
				system("pause");
			}
			else if (fndst3 && fndst4) {
				cout << "Mergi in sebi 2 - 3";
				system("pause");
			}
			else if (fndst3 && fndst5) {
				cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
				cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
				while (cin.fail() || (choice > 3 || choice < 1)) {
					PRINT_ERROR(5);
					cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
				}
				if (choice == 1) {
					cout << "Jocul a plasat discul pe singura pozitia castigatoare: Turnul 5\n";
					Stiva* aux = Cauta(st3, jucator, justavalue);
					st3->pred = aux->pred;
					st5 = POP(aux, st5);
				}
				else if (choice == 2) {
					cout << "Valori disponibile de plasat:\n";
					cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 3 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
					}
					switch (choice) {
					case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
					case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
					case 3: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
					}
				}
			}
			else if (fndst4 && fndst5) {
				if (TOP(st5)->tag >= TOP(st1)->tag) {

					cout << "Jucatorul " << Jucator1.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
					cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 3 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					if (choice == 2) {
						cout << "Jocul a plasat discul pe singura pozitie disponibila: Turnul 3\n";
						st3 = POP(st5, st3);
						mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator);

					}
					else if (choice == 1) {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
						case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
						case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
						case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
						}
					}
				}
			}
			else if (fndst1) {
				if (TOP(st1)->tag >= TOP(st5)->tag) {
					if ((TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jocul a luat singurul disc disponibil pentru Jucatorul " << Jucator1.Nume << " de pe Turnul 1";
						cout << "\nValori disponibile de plasat:\n";
						cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
						case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
						case 4: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
						}
					}
				}
				else {
					if ((TOP(st2)->tagjucator != jucator) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jocul a luat singurul disc disponibil pentru Jucatorul " << Jucator1.Nume << " de pe Turnul 1";
						cout << "\nValori disponibile de plasat:\n";
						cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
						case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
						case 4: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
						}
					}
					else if ((TOP(st2)->tag == NULL) && (TOP(st3)->tagjucator != jucator) && (TOP(st4)->tag == NULL)) {
						cout << "Jocul a luat singurul disc disponibil pentru Jucatorul " << Jucator1.Nume << " de pe Turnul 1";
						cout << "\nValori disponibile de plasat:\n";
						cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
						case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
						case 4: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
						}
					}
					else if ((TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL) && (TOP(st4)->tagjucator != jucator)) {
						cout << "Jocul a luat singurul disc disponibil pentru Jucatorul " << Jucator1.Nume << " de pe Turnul 1";
						cout << "\nValori disponibile de plasat:\n";
						cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
						case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
						case 4: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
						}
					}
				}
			}
			else if (fndst2) {
				cout << "Mergi in sebi 2";
				system("pause");
			}
			else if (fndst3) {
				cout << "Mergi in sebi 3";
				system("pause");
			}
			else if (fndst4) {
				cout << "Mergi in sebi 4";
				system("pause");
			}
			else if (fndst5) {
				cout << "Mergi in sebi 5";
				system("pause");
			}
		}
		else if (!jucator) {
			if (fndst1 && fndst2 && fndst3 && fndst4 && fndst5) {
				cout << "Mergi in serban 1 - 2 - 3 - 4 - 5";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst3 && fndst4) {
				cout << "Mergi in serban 1 - 2 - 3 - 4";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst3 && fndst5) {
				cout << "Mergi in serban 1 - 2 - 3 - 5";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst4 && fndst5) {
				cout << "Mergi in serban 1 - 2 - 4 - 5";
				system("pause");
			}
			else if (fndst1 && fndst3 && fndst4 && fndst5) {
				cout << "Mergi in serban 1 - 3 - 4 - 5";
				system("pause");
			}
			else if (fndst2 && fndst3 && fndst4 && fndst5) {
				cout << "Mergi in serban 2 - 3 - 4 - 5";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst3) {
				cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
				cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
				while (cin.fail() || (choice > 3 || choice < 1)) {
					PRINT_ERROR(5);
					cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
				}
				if (choice == 1) {
					cout << "Jocul a plasat discul pe singura pozitie disponibila: Turnul 4\n";
					st4 = POP(st1, st4);
				}
				else if (choice == 1) {
					cout << "Valori disponibile de plasat:\n";
					cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 4 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					switch (choice) {
					case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
					case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
					case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
					case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
					}
				}
				else if (choice == 2) {
					cout << "Valori disponibile de plasat:\n";
					cout << "\t1) Turnul 1\n\t2) Turnul 4\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 3 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 1\n\t2) Turnul 4\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
					}
					switch (choice) {
					case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
					case 2: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
					case 3: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
					}
				}
			}
			else if (fndst1 && fndst2 && fndst4) {
				cout << "Mergi in serban 1 - 2 - 4";
				system("pause");
			}
			else if (fndst1 && fndst2 && fndst5) {
				if (TOP(st1)->tag < TOP(st5)->tag) {
					if ((TOP(st1)->tagjucator == jucator) && TOP(st3)->tag == NULL && TOP(st5)->tagjucator == jucator && TOP(st2)->tag > TOP(st4)->tag) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 3 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 3) {
							cout << "Jocul a plasat discul pe singura pozitie disponibila: Turnul 3\n";
							st3 = POP(st5, st3);
						}
						else if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else if(choice == 2) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
							case 2: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
							}
						}
					}
				}
			}
			else if (fndst1 && fndst3 && fndst4) {
				cout << "Mergi in serban 1 - 3 - 3";
				system("pause");
			}
			else if (fndst1 && fndst3 && fndst5) {
				cout << "Mergi in serban 2 - 3 - 5";
				system("pause");
			}
			else if (fndst1 && fndst4 && fndst5) {
				cout << "Mergi in serban 1 - 4 - 5";
				system("pause");
			}
			else if (fndst2 && fndst3 && fndst4) {
				cout << "Mergi in serban 2 - 3 - 4";
				system("pause");
			}
			else if (fndst2 && fndst3 && fndst5) {
				cout << "Mergi in serban 2 - 3 - 5";
				system("pause");
			}
			else if (fndst2 && fndst4 && fndst5) {
				cout << "Mergi in serban 2 - 4 - 5";
				system("pause");
			}
			else if (fndst3 && fndst4 && fndst5) {
				cout << "Mergi in serban 3 - 4 - 5";
				system("pause");
			}
			else if (fndst1 && fndst2) {
			if (TOP(st5)->tag >= TOP(st1)->tag) {

				cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
				cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
				while (cin.fail() || (choice > 3 || choice < 1)) {
					PRINT_ERROR(5);
					cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
				}
				if (choice == 1) {
					cout << "Jocul a plasat discul pe singura pozitie disponibila: Turnul 3\n";
					st1 = POP(st1, st3);
				}
				else if (choice == 2) {
					cout << "Valori disponibile de plasat:\n";
					cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 4 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					switch (choice) {
					case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
					case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
					case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
					case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
					}
				}
			}
			}
			else if (fndst1 && fndst3) {
				cout << "Mergi in serban 1 - 3";
				system("pause");
			}
			else if (fndst1 && fndst4) {
				cout << "Mergi in serban 1 - 4";
				system("pause");
			}
			else if (fndst1 && fndst5) {
				if (TOP(st1)->tag < TOP(st5)->tag) {
					if ((TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							switch (choice) {
							case 1: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st3)->tag < TOP(st5)->tag) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st3, jucator, justavalue);
							st3->pred = aux->pred;
							switch (choice) {
							case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st4)->tag < TOP(st5)->tag) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st3)->tag != NULL) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st1, jucator, justavalue);
							st1->pred = aux->pred;
							switch (choice) {
							case 1: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
				}
				else {
					if ((TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st5, jucator, justavalue);
							st5->pred = aux->pred;
							switch (choice) {
								case 1: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
								case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
								case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st4)->tag != NULL) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st1, st2); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st1, st3); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st1, st4); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st1, st5); mutari = Push(mutari, "Disc mutat de pe tija 1 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st5, jucator, justavalue);
							st5->pred = aux->pred;
							switch (choice) {
							case 1: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
				}
			}
			else if (fndst2 && fndst3) {
				cout << "Mergi in serban 2 - 3";
				system("pause");
			}
			else if (fndst2 && fndst4) {
				cout << "Mergi in serban 2 - 4";
				system("pause");
			}
			else if (fndst2 && fndst5) {
			if (TOP(st1)->tag >= TOP(st5)->tag) {
				if ((TOP(st2)->tagjucator != jucator) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
					cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
					cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 2 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					if (choice == 1) {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
						case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
						}
					}
					else {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 3 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						Stiva* aux = Cauta(st5, jucator, justavalue);
						st5->pred = aux->pred;
						switch (choice) {
						case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
						}
					}
				}
				else if ((TOP(st4)->tag != NULL) && (TOP(st2)->tag != NULL) && (TOP(st3)->tag == NULL)) {
					cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
					cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 2 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					if (choice == 1) {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
						case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
						}
					}
					else {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						}
					}
				}
				else if ((TOP(st4)->tag == NULL) && (TOP(st2)->tag != NULL) && (TOP(st3)->tag != NULL)) {
					cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
					cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 2 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					if (TOP(st3)->tag < TOP(st2)->tag) {
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
					else {
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
				}
				else if ((TOP(st4)->tag != NULL) && (TOP(st2)->tag != NULL) && (TOP(st3)->tag != NULL)) {
					cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
					cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 2 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					if (choice == 1) {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
						case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
						}
					}
					else {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						}
					}

				}
			}
			else {
				if ((TOP(st2)->tagjucator == jucator) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
					cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
					cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 2 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					if (choice == 1) {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
						case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
						}
					}
					else {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 3 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						if (TOP(st5)->tagjucator == jucator) {
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
						else {
							Stiva* aux = Cauta(st5, jucator, justavalue);
							st5->pred = aux->pred;
							switch (choice) {
							case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
				}
				else if ((TOP(st4)->tag != NULL) && (TOP(st3)->tag == NULL)) {
					cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
					cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 2 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 2\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					if (choice == 1) {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st2, st1); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(st2, st3); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 3 de catre ", jucator); break;
						case 3: st4 = POP(st2, st4); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 4 de catre ", jucator); break;
						case 4: st5 = POP(st2, st5); mutari = Push(mutari, "Disc mutat de pe tija 2 pe tija 5 de catre ", jucator); break;
						}
					}
					else {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						Stiva* aux = Cauta(st5, jucator, justavalue);
						st5->pred = aux->pred;
						switch (choice) {
						case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						}
					}

				}
			}
			}
			else if (fndst3 && fndst4) {
				cout << "Mergi in serban 3 - 4";
				system("pause");
			}
			else if (fndst3 && fndst5) {
				if (TOP(st1)->tag > TOP(st5)->tag) {
					if ((TOP(st3)->tag < TOP(st1)->tag) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st5, jucator, justavalue);
							st5->pred = aux->pred;
							switch (choice) {
							case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st3)->tag != NULL) && (TOP(st2)->tag != NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}

						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							if (TOP(st2)->tag == TOP(st3)->tag) {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 2 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
								}
							}
							else {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 3 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
								case 3: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
								}
							}
						}
					}
					else if ((TOP(st3)->tag != NULL) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag != NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							if (TOP(st4)->tag == TOP(st3)->tag) {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 2 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
								}
							}
							else {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 3 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
								case 3: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
								}
							}
						}
					}
					else if ((TOP(st3)->tag != NULL) && (TOP(st2)->tag != NULL) && (TOP(st4)->tag != NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
				}
				else {
					if ((TOP(st3)->tagjucator == jucator) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 2: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st3)->tagjucator != jucator) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st3, jucator, justavalue);
							st3->pred = aux->pred;
							switch (choice) {
							case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 2: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st3)->tag != NULL) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag != NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st3)->tag != NULL) && (TOP(st2)->tag != NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 3\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st3, st1); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st3, st2); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 2 de catre ", jucator); break;
							case 3: st4 = POP(st3, st4); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 4 de catre ", jucator); break;
							case 4: st5 = POP(st3, st5); mutari = Push(mutari, "Disc mutat de pe tija 3 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							if (TOP(st2)->tag == TOP(st3)->tag) {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 4\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 2 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 2\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
								}
							}
							else {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 2 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
								case 3: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
								}
							}
						}
					}

				}
			}
			else if (fndst4 && fndst5) {
				if (TOP(st1)->tag > TOP(st5)->tag) {
					if ((TOP(st4)->tag < TOP(st1)->tag) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 3 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
							}
							Stiva* aux = Cauta(st5, jucator, justavalue);
							st5->pred = aux->pred;
							switch (choice) {
							case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 3: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st4)->tag != NULL) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag != NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							if (TOP(st4)->tag == TOP(st3)->tag) {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 2 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
								}
							}
							else {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 3 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
								case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
								}
							}
							
						}
					}
					else if ((TOP(st4)->tag != NULL) && (TOP(st2)->tag != NULL) && (TOP(st3)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							if (TOP(st4)->tag == TOP(st2)->tag) {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 2 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
								}
							}
							else {
								cout << "Valori disponibile de plasat:\n";
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
								while (cin.fail() || (choice > 3 || choice < 1)) {
									PRINT_ERROR(5);
									cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\tAlegere > "; cin >> choice;
								}
								switch (choice) {
								case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
								case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
								case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
								}
							}
						}
					}
					else if ((TOP(st3)->tag != NULL) && (TOP(st2)->tag != NULL) && (TOP(st4)->tag != NULL)) {
					cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
					cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					while (cin.fail() || (choice > 2 || choice < 1)) {
						PRINT_ERROR(5);
						cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
					}
					if (choice == 1) {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 4\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
						case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
						case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
						case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
						}
					}
					else {
						cout << "Valori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						}
					}
					}
				}
				else {
					if ((TOP(st4)->tag < TOP(st5)->tag) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							if (TOP(st4)->tagjucator == jucator) {
								switch (choice) {
								case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
								case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
								case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
								case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
								}
							}
							else {
								Stiva* aux = Cauta(st4, jucator, justavalue);
								st4->pred = aux->pred;
								switch (choice) {
								case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
								case 2: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
								case 3: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
								case 4: st5 = POP(aux, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
								}
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 2\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st4)->tag != NULL) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag != NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 2\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
							}
						}
					}
					else if ((TOP(st4)->tag != NULL) && (TOP(st2)->tag != NULL) && (TOP(st3)->tag == NULL)) {
						cout << "Jucatorul " << Jucator2.Nume << " este rugat sa aleaga de pe ce turn sa ia o valoare: \n";
						cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 2 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 4\n\t2) Turnul 5\n\tAlegere > "; cin >> choice;
						}
						if (choice == 1) {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 4 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 5\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st4, st1); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 1 de catre ", jucator); break;
							case 2: st2 = POP(st4, st2); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 2 de catre ", jucator); break;
							case 3: st3 = POP(st4, st3); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 3 de catre ", jucator); break;
							case 4: st5 = POP(st4, st5); mutari = Push(mutari, "Disc mutat de pe tija 4 pe tija 5 de catre ", jucator); break;
							}
						}
						else {
							cout << "Valori disponibile de plasat:\n";
							cout << "\t1) Turnul 1\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
							while (cin.fail() || (choice > 2 || choice < 1)) {
								PRINT_ERROR(5);
								cout << "\t1) Turnul 2\n\t2) Turnul 3\n\tAlegere > "; cin >> choice;
							}
							switch (choice) {
							case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
							case 2: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
							}
						}
					}
				}
			}
			else if (fndst1) {
				cout << "Mergi in serban 1";
				system("pause");
			}
			else if (fndst2) {
				cout << "Mergi in serban 2";
				system("pause");
			}
			else if (fndst3) {
				cout << "Mergi in serban 3";
				system("pause");
			}
			else if (fndst4) {
				cout << "Mergi in serban 4";
				system("pause");
			}
			else if (fndst5) {
				if (TOP(st1)->tag >= TOP(st5)->tag) {
					if ((TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jocul a luat singurul disc disponibil pentru Jucatorul " << Jucator2.Nume << " de pe Turnul 5";
						cout << "\nValori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						Stiva* aux = Cauta(st5, jucator, justavalue);
						st5->pred = aux->pred;
						switch (choice) {
						case 1: st1 = POP(aux, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st2 = POP(aux, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
						case 3: st3 = POP(aux, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						case 4: st4 = POP(aux, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
						}
					}
					else if ((TOP(st2)->tag >= TOP(st5)->tag) && (TOP(st3)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jocul a luat singurul disc disponibil pentru Jucatorul " << Jucator2.Nume << " de pe Turnul 5";
						cout << "\nValori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
						case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						case 4: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
						}
					}
					else if ((TOP(st3)->tag >= TOP(st5)->tag) && (TOP(st2)->tag == NULL) && (TOP(st4)->tag == NULL)) {
						cout << "Jocul a luat singurul disc disponibil pentru Jucatorul " << Jucator2.Nume << " de pe Turnul 5";
						cout << "\nValori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
						case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						case 4: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
						}
					}
					else if ((TOP(st1)->tag != NULL) && (TOP(st2)->tag != NULL) && (TOP(st3)->tag != NULL)) {
						cout << "Jocul a luat singurul disc disponibil pentru Jucatorul " << Jucator2.Nume << " de pe Turnul 5";
						cout << "\nValori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
						case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						case 4: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
						}
					}
					else if ((TOP(st4)->tag >= TOP(st5)->tag) && (TOP(st2)->tag == NULL) && (TOP(st3)->tag == NULL)) {
						cout << "Jocul a luat singurul disc disponibil pentru Jucatorul " << Jucator2.Nume << " de pe Turnul 5";
						cout << "\nValori disponibile de plasat:\n";
						cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						while (cin.fail() || (choice > 4 || choice < 1)) {
							PRINT_ERROR(5);
							cout << "\t1) Turnul 1\n\t2) Turnul 2\n\t3) Turnul 3\n\t4) Turnul 4\n\tAlegere > "; cin >> choice;
						}
						switch (choice) {
						case 1: st1 = POP(st5, st1); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 1 de catre ", jucator); break;
						case 2: st2 = POP(st5, st2); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 2 de catre ", jucator); break;
						case 3: st3 = POP(st5, st3); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 3 de catre ", jucator); break;
						case 4: st4 = POP(st5, st4); mutari = Push(mutari, "Disc mutat de pe tija 5 pe tija 4 de catre ", jucator); break;
						}
					}
				}
			}
		}
		jucator = !jucator;
	}
	system("pause");
	system("cls");
	PRINT(st1, st2, st3, st4, st5, n);
	if ((SUM(st1, false) != suma) || (SUM(st2, false) != suma)) {

		cout << "Felicitari " << Jucator1.Nume << " ai castigat!\nAcum se va afisa lista de mutari!\n";
		Print(mutari);
	}
	else {
		cout << "Felicitari " << Jucator2.Nume << " ai castigat!\nAcum se va afisa lista de mutari!\n";
		Print(mutari);
	}
}

void PRINT_ERROR(int err)
{
	switch (err)
	{
	case 4:
		cout << "Valoarea introdusa nu este valida! Introduceti valoarea din nou!\n";
		break;
	case 5:
		cin.clear();
		cin.ignore();
		PRINT_ERROR(4);
		break;
	}
}
